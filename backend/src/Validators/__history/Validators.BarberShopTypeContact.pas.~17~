unit Validators.BarberShopTypeContact;

interface

uses Models.BarberShopTypeContact, system.SysUtils, Models.Message, system.Generics.Collections;

type

  TValidateBarberShopTypeContact = class
  private
    FBarberShopTypeContact: TBarberShopTypeContact;
    FValidateName: TMessage;
    FValidateNameLength: TMessage;
    function ValidateName: TMessage;
    function ValidateNameLength: TMessage;
    procedure setBarberShopTypeConta(const Value: TBarberShopTypeContact);
  public
    property BarberShopTypeContact: TBarberShopTypeContact write setBarberShopTypeConta;
    function Validate: TObjectList<TMessage>;
    constructor Create;
    destructor Destroy; override;
  end;

implementation

uses Enum.Message.Types;

{ TValidateBarberShopTypeContact }

constructor TValidateBarberShopTypeContact.Create;
begin
  FValidateName := TMessage.Create;
end;

destructor TValidateBarberShopTypeContact.Destroy;
begin
  FValidateName.Free;
  inherited;
end;

procedure TValidateBarberShopTypeContact.setBarberShopTypeConta(const Value: TBarberShopTypeContact);
begin
  FBarberShopTypeContact := Value;
end;

function TValidateBarberShopTypeContact.Validate: TObjectList<TMessage>;
begin
  result := TObjectList<TMessage>.Create;
  if self.ValidateName.Tipo <> TMessageTypes.Nenhum then
    result.Add(FValidateName)
  else if self.ValidateNameLength.Tipo <> TMessageTypes.Nenhum then
    result.Add(FValidateNameLength);
end;

function TValidateBarberShopTypeContact.ValidateName: TMessage;
begin
  if Trim(FBarberShopTypeContact.descr_btc) <> '' then
    FValidateName.Tipo := TMessageTypes.Nenhum
  else
  begin
    FValidateName.Tipo := TMessageTypes.Ok;
    FValidateName.texto := 'O campo "descrição" é de preenchimento obrigatório';
    FValidateName.titulo := 'Erro';
  end;
  result := FValidateName;
end;

function TValidateBarberShopTypeContact.ValidarTamanhoNome: TMensagem;
begin
  if FMedico.nome.Length <= 60 then
    FValidarTamanhoNome.Tipo := TTipoMensagem.Nenhum
  else
  begin
    FValidarTamanhoNome.Tipo := TTipoMensagem.Ok;
    FValidarTamanhoNome.texto := 'O campo NOME deve possuir no máximo 60 caracteres';
    FValidarTamanhoNome.titulo := 'Erro';
  end;
  result := FValidarTamanhoNome;
end;


end.
